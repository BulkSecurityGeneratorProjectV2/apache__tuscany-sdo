M2
(from M1)


  1. `java.io.Serializable` support for `DataObject`s including objects not in a `DataGraph` (TUSCANY-22)
    * implemented `ExternalizableDelegator` and `ExternalizableDelegator.Resolvable`
    * implemented proper/compliant data object serialization format
    * DataGraph serialization (non-compliant format) is also working now

  2. Java code generator improvements
    * new option (-interfaceDataObject) to generate interfaces that extend commonj.sdo.DataObject (TUSCANY-254)
    * generated interfaces now extend java.io.Serializable by default
    * -noEMF pattern improvements, e.g., inheritance and bidirectional references now working (sca-core.xsd can be generated)
 
  3. XML Schema generation (TUSCANY-535)
    * implemented `XSDHelper.generate()` methods

  4. StAX-based Load load and save support (TUSCANY-118)
    * New helper XMLStreamHelper

  5. new SDOUtil methods
    * SDOUtil.getSubstitutionValues() - Non-EMF way to get the Sequence corresponding to a substitutable Property (TUSCANY-502/503)
    * SDOUtil.isRequired() - Determine if a property is required, that is, minOccurs > 0 (TUSCANY-504)
    * SDOUtil.setRootObject() - Set the root object of a DataGraph (TUSCANY-512)
    * SDOUtil.getTypes() - Gets all of the types associated with a uri (TUSCANY-583)
    * SDOUtil.registerDataGraphTypes - Register Types to be serialized along with a DataGraph (TUSCANY-670)

  6. CrossScopeCopyHelper (TUSCANY-627)
    * used to copy DataObject instances from one TypeHelper scope to another scope

  7. open content creation API (SDO 2.1 enhancement early implementation - see draft 2.1 spec)
    * TypeHelper.createOpenContentProperty()
    * TypeHelper.getOpenContentProperty()

  8. sample programs
    * There are currently three groups of samples
     8.1. Simple code snippets located throughout the specifiction with comparative methods for acheiving the same results
         # Create DataObject from XML String
         # Create DataObject from XSD and XML files
         # Access DataObject Properties by name
         # Dynamic "Customer" Type sample
         # Print Properties of DataObject
         # Using XPath
         # Obtaining DataGraph from XML
     8.2. Full examples located within Examples section of specification
         # Access DataObjects using XPath
         # Accessing DataObjects via Property index
         # Accessing the contents of a Sequence
         # Creating DataObject trees from XMLDocuments
         # Creating XML from DataObjects
         # Serializing desearializing a DataObject
         # Using Type and Property with DataObjects
     8.3. Other sample sources such as white papers and online articles
         # Create PurchaseOrder
         # Read PurchaseOrder
         # PurchaseOrder command line

  9. bug fixes
    * DataObject string accessors were not working for XPath segements with @ prefix, e.g. "@property" (TUSCANY-425)
    * string accessors fixed to throw IndexOutOfBounds exception for "property[0]" since index starts with 1 (TUSCANY-475)
    * fixed Date-Type properties (including Day, Date, DateTime, Duration, etc.) that were not working/roundtripping properly (TUSCANY-579/582)
    * dynamically-created global (open content) properties were not serializing properly (TUSCANY-530/531)
    * properties created from XSD attributes now appear, in the Type, in the same order as the attributes in the XSD complexType
    * fixed test harness to allow comments in XML test files (TUSCANY-427)
    * loading XSDs with nillable elements, of built-in types, caused NPE (TUSCANY-676)
    * fixed NPE when loading XSD without targetNamespace (TUSCANY-645)
    * made Type.getProperty(String) implementaion thread safe (TUSCANY-682)
    * support base64Binary and hexBinary XSD types correctly (TUSCANY-685)
    * fixed generation of invalid prefixes in XML serialization (TUSCANY-711)
    * sometimes SDOXMLResourceImpl (instead of XSDResourceImp) was incorrectly used when loading .xsd files (TUSCANY-714)